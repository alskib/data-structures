-- user end of generic stack

WITH Ada.Text_IO; USE Ada.Text_IO;
WITH Ada.Exceptions; USE Ada.Exceptions;
WITH G_Stack;
WITH Unchecked_Conversion;

PROCEDURE Main IS
   TYPE MonthName IS (January, February, March, April, May, June, July, August, September, October, November, December, DONE);
   TYPE DateType IS RECORD
      Month: MonthName;
      Day: Integer RANGE 1..31;
      Year: Integer;
   END RECORD;

   PACKAGE MonthNameIO IS NEW Ada.Text_IO.Enumeration_IO(MonthName); USE MonthnameIO;
   PACKAGE MyInt_IO IS NEW Ada.Text_IO.Integer_IO(Integer); USE MyInt_IO;

   FUNCTION IntToChar IS NEW Unchecked_Conversion(Integer, Character);
   FUNCTION CharToInt IS NEW Unchecked_Conversion(Character, Integer);

   Count: Integer := 0;
   In_Char : Character;
   In_Int, Stacktype : Integer;
   In_Date : Datetype;
   StackSize : Integer := 5;
   Did_It_Work : Boolean;

   BEGIN
      LOOP
         Main_Menu:
         LOOP
            Put_Line("Stack menu");
            Put_Line("----------");
            Put_Line("1. Character");
            Put_Line("2. Integer");
            Put_Line("3. Date");
            Put_Line("4. EXIT");
            New_Line;
            Put("> ");
            Get(StackType);
            EXIT Main_Menu WHEN Stacktype = 1 OR Stacktype = 2 OR Stacktype = 3 OR Stacktype = 4;
            Put("Input error. Enter 1 through 4.");
         END LOOP Main_Menu;
         EXIT WHEN Stacktype = 4;
         New_Line;
         Put_Line("Enter stack size: ");
         New_Line;
         Put("> ");
         Get(Stacksize);
         CASE Stacktype IS
            WHEN 1 =>
               CHARACTER_CASE;
               DECLARE
                  PACKAGE Character_Stack IS NEW G_Stack(Stacksize, Character);
                  USE Character_Stack;
               BEGIN
                  LOOP
                     Put_Line("Stack Operations");
                     Put_Line("----------------");
                     Put_Line("1. Push");
                     Put_Line("2. Pop");
                     Put_Line("3. EXIT (empty stack)");
                     New_Line;
                     Put("> ");

